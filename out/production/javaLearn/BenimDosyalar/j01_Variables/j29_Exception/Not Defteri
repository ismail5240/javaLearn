basari gayrete asiktir

/*

     Dosya okuma/yazma işlemi bu işlemlerde hata olasılığı yüksek olduğundan hata kontrolü zorunlu tutuluyor.
     bu yüzden try-catch e alınması bu kodun zorunlu tutuluyor. bu gibi surumlara karşılk gelen hatalara Checked Exception denir
     Özellikle IO(input output) işlemleri CHECKED EXCEPTİON dur.


    Bir kod yazilirken olasi exception'lar ongorulup
    exception olustugunda Java'nin ne yapmasini istedigimiz
    belirtilmelidir.


         1) FileNotFoundException, ustunde calisilicak bir dosyaya ulasma ile ilgili problemlerde
kullanilir. Bir dosyaya ulasmada iki temel problem olabilir; a) Path yanlistir. b) Dosya silinmistir.

   2) IOException, input ve output ile alakali tum problemlerde kullanilir. IOException,
FileNotFoundException'in yaptigi tum aksiyonları yapabilir dolayısıyla IOException kullanildiginda
FileNotException'in kullanilmasina gerek yoktur. IOException FileNotFoundException
Class'inin parent class Hz.Adem
 */

 /*
 ahan da TRİCK kosesinde bugun :)

 "throw" - throws" farkları
 1- "throws" -> main method kapanıs parantezi ile method body acılıs parantezi arasına yazılır.
    "throw" -> method body içinde tanımlanır.
 2- "throws" -> keywordden sonra birden fazla exception tanımlanabilir
    "throw" -> keywordden sonra sadece bir tane exception tanımlanır
 3- "throws" -> keywordden sonra sadece exception class name yazılır
     "throw" ->  keywordden sonra exception obj tanımlanır
 4- "throws" -> keyword method ilk satırda sadece bir kez tanımlanır
     "throw" -> keyword istenildiği kadar method body de tanımlanabilir.
  */
